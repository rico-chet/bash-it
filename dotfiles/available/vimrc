" load system defaults when present
let defaults_file = "/usr/share/vim/vim"
	\ . (v:version / 100) . (v:version % 10)
	\ . "/defaults.vim"
if filereadable(defaults_file)
	execute "source " . defaults_file
endif

" mouse in vim confuses me
set mouse=

" quickly toggle paste mode
set pastetoggle=<F2>

" spell check in English (US)
" disable with `setlocal nospell`
" add words to dictionary with `zg`
setlocal spell spelllang=en_us

" use `\s` for spell suggestions drop-down
nnoremap \s ea<C-X><C-S>

" Mark tabs and trailing whitespace
set listchars=tab:‗‗,trail:‗
set list

if executable("powerline")
	" Set up powerline, see
	" https://powerline.readthedocs.io/en/latest/troubleshooting.html#my-vim-statusline-is-hidden-only-appears-in-split-windows
	set laststatus=2
endif

if filereadable("/usr/lib/ycmd/ycm_extra_conf.py")
	" Set up youcompleteme
	let g:ycm_global_ycm_extra_conf = "/usr/lib/ycmd/ycm_extra_conf.py"
	filetype on
endif

" set up `cscope`
" this was adapted from
" https://vimhelp.org/if_cscop.txt.html#cscope-suggestions
if has("cscope")
	set cscopetagorder=0
	set cscopetag

	" add any database in current directory
	set nocscopeverbose
	if filereadable("cscope.out")
		cscope add cscope.out
	" else add database pointed to by environment
	elseif "${CSCOPE_DB}" != ""
		cscope add "${CSCOPE_DB}"
	endif
	set cscopeverbose

	" add common shortcuts
	"
	" s: Find this C symbol
	" g: Find this definition
	" d: Find functions called by this function
	" c: Find functions calling this function
	" t: Find this text string
	" e: Find this egrep pattern
	" f: Find this file
	" i: Find files #including this file
	" a: Find places where this symbol is assigned a value
	"
	nmap gss :cscope find s <C-R>=expand("<cword>")<CR><CR>
	nmap gsg :cscope find g <C-R>=expand("<cword>")<CR><CR>
	nmap gsd :cscope find d <C-R>=expand("<cword>")<CR><CR>
	nmap gsc :cscope find c <C-R>=expand("<cword>")<CR><CR>
	nmap gst :cscope find t <C-R>=expand("<cword>")<CR><CR>
	nmap gse :cscope find e <C-R>=expand("<cword>")<CR><CR>
	nmap gsf :cscope find f <C-R>=expand("<cword>")<CR><CR>
	nmap gsi :cscope find i <C-R>=expand("<cword>")<CR><CR>
	nmap gsa :cscope find a <C-R>=expand("<cword>")<CR><CR>
endif
